import os
from pytube import YouTube
from pytube.cli import on_progress


# Function to convert a YouTube link to MP4 and/or MP3
def convert_youtube_link(link, download_video=True, download_audio=True, output_dir='output'):
    try:
        # Create the output directory if it doesn't exist
        os.makedirs(output_dir, exist_ok=True)

        # Get YouTube video
        yt = YouTube(link, on_progress_callback=on_progress)

        if download_video:
            # Download the video
            stream = yt.streams.filter(progressive=True, file_extension='mp4').first()
            video_filename = os.path.join(output_dir, f'{yt.title}.mp4')
            stream.download(output_path=output_dir, filename=f'{yt.title}.mp4')
            print(f'Video downloaded: {video_filename}')

        if download_audio:
            if not download_video:
                # If video is not downloaded, fetch the stream for audio conversion
                stream = yt.streams.filter(only_audio=True).first()

            # Convert the audio to MP3
            audio_filename = os.path.join(output_dir, f'{yt.title}.mp3')
            stream.download(output_path=output_dir, filename=f'{yt.title}.mp3')
            print(f'Audio converted to MP3: {audio_filename}')

        print('Download and conversion completed!')

    except Exception as e:
        print(f'An error occurred: {str(e)}')


if __name__ == "__main__":
    youtube_link = input("Enter the YouTube link: ")

    download_video = input("Download video (y/n)? ").strip().lower() == 'y'
    download_audio = input("Convert to MP3 (y/n)? ").strip().lower() == 'y'

    if download_video or download_audio:
        convert_youtube_link(youtube_link, download_video, download_audio)
    else:
        print("No download or conversion selected.")

#####################################################################
23/09/2023 4.45 am
####################################################################
-------------------------------------------------------------
Install and configure in Vagrant in Windows 
-------------------------------------------------------------
C:\Users\km443\vagrant-vms\ubuntu
#Vagrant instll winodws: Download the link  :   https://developer.hashicorp.com/vagrant/downloads
vagrant init centos/7
#check vagrant global status
vagrant global-status
vagrant global-status --prune

#Edit vagrant file 
config.vm.network "private_network", ip: "192.168.56.14"
config.vm.network "public_network"
configure.vm.provider "virtualbox" do |vb|
vb.memory="1024"

-----------------------------------------------------------------------------------------
Start the vagrant : Need to go to specific folder : To run a new vagrant try to delete old Vagrant file and create a new one 
#vagrant up
#vagrant ssh
#sudo -i
--------------------------------------------------------------------------------------------------
Install and configure wordpress on Ubuntu
---------------------------------------------------------------------------------------------------
#1.Install and configure wordpress. Here is the link i followed 
https://ubuntu.com/tutorials/install-and-configure-wordpress#1-overview
#2.Install Dependencies 
https://ubuntu.com/tutorials/install-and-configure-wordpress#2-install-dependencies
#3.Install Wordpress 
https://ubuntu.com/tutorials/install-and-configure-wordpress#3-install-wordpress
#4.Configure Apache for Wordpress
https://ubuntu.com/tutorials/install-and-configure-wordpress#4-configure-apache-for-wordpress
#5.Configure wordpress database 
https://ubuntu.com/tutorials/install-and-configure-wordpress#5-configure-database
#6.Configure WordPress to connect to the database
https://ubuntu.com/tutorials/install-and-configure-wordpress#6-configure-wordpress-to-connect-to-the-database
#7.Configure WordPress
https://ubuntu.com/tutorials/install-and-configure-wordpress#7-configure-wordpress
-------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------
# Create a schedule to backup 
------------------------------------------------------------------------
#crontab -l
#crontab -e
#27 05 * * * /home/vagrant/script/website_backup.sh ( run the script 5.27 am today)
#50 05 * * * /home/vagrant/script/website_backup.sh ( run the script 5.50 am today)
----------------------------------------------------------------------------------
# To check the log 
------------------------------------------------------------------------------------
#sudo tail -f /var/log/messages
#cat /var/log/auth.log |grep ssh |grep ip | grep 185.91.87.4
#cat /var/log/nginx/error.log
#tail -100 /var/log/httpd/error_log

---------------------------------------------------------

##########################################################
25/09/2023 6.37 am 
##########################################################
------------------------------------------------------
Performance monitoring and statistic
------------------------------------------------------
yum install sysstat
mpstat 5 
vmstat 1
iostat 3
htop
ifconfig
host 172.31.101.155
tcpdump -i ens5
tcpdump -i eth2
sudo yum install tcpdump
watch df -h 
---------------------------------------
Check the Log 
---------------------------------------
tail -100 /var/log/messages
tail -f  /var/log/messages
sudo tail -f secure
------------------------------------------
Automate the script to run a schedule backup
----------------------------------------------------------
#50 05 * * * /home/vagrant/script/website_backup.sh ( run the script 5.50 am today)
--------------------------------------------------------

###########################################################
25/09/2023  09:50  am 
###########################################################
#lsblk
###  User managemnt
#sudo useradd -m -s /bin/bash km700
#sudo passwd km700
#sudo usermod -aG wheel km700
#sudo usermod -c " full name " km700
#.bashrc -->bash sheel setting
#.profile --> environemntal setting
#/etc/passwd /etc/shadow /etc/group
#/etc/security/ ----> password policy 
# visudo /etc/sudoers  ---> sudo configuration 
-----------------------------------------------------
25/09/2023  10:02 
----------------------------------------------------
#cat /etc/login.defs
#cat /var/log/auth.log |grep ssh |grep ip | grep 185.91.87.4
------------------------------------------------------------
####################################################################
26/09/2023/ 06:15am
##################################################################
Learning Docker : Following the Youtube tuturial/ Here is the link below 
udemy : https://www.udemy.com/course/decodingdevops/learn/lecture/31765592?start=668#announcements
#systemctl status docker
#sudo docker run hello-world
#sudo docker images
#sudo docker ps --> showing running container
#sudo docker ps -a --> showing all container 
#sudo docker run --name web01 -d -p 9080:80 nginx --> pull a dockr container image nginx
#sudo docker inspect web01
#curl http://172.17.0.2:80
#ip add
#sudo docker ps ..> run this and get the port number 
#Browser http://192.168.56.82:9080/
................................................................................
#############################################################################
26/09/2023   06:36 am   Home 
##########################################################################
-----------------------------------------------------------------------
# Basic Linux  Commands
systemctl status docker
docker run hello-world
#Docker commands
docker images
docker ps
docker ps -a

# Run a container
docker run --name web01 -d -p 9080:80 nginx
docker ps
docker inspect web01
curl http://172.17.0.2:80

ip addr show
docker ps

# Go to browser enter IP:HostPort

# Building an Image
mkdir images
cd images/
vim Dockerfile
# Paste below content
FROM ubuntu:latest AS BUILD_IMAGE
RUN apt update && apt install wget unzip -y
RUN wget https://www.tooplate.com/zip-templates/2128_tween_agency.zip
RUN unzip 2128_tween_agency.zip && cd 2128_tween_agency && tar -czf tween.tgz * && mv tween.tgz /root/tween.tgz

FROM ubuntu:latest
LABEL "project"="Marketing"
ENV DEBIAN_FRONTEND=noninteractive

RUN apt update && apt install apache2 git wget -y
COPY --from=BUILD_IMAGE /root/tween.tgz /var/www/html/
RUN cd /var/www/html/ && tar xzf tween.tgz
CMD ["/usr/sbin/apache2ctl", "-D", "FOREGROUND"]
VOLUME /var/log/apache2
WORKDIR /var/www/html/
EXPOSE 80

# Build Image
docker build -t tesimg .
docker images

# Run container from our Image
docker run -P -d tesimg
docker ps


docker ps
ip addr show
docker ps

# Go to browser enter IP:HostPort
#http://192.168.56.82:32768/index.html


# CLEAN UP
docker ps
docker stop web01 heuristic_hugle
docker ps -a
docker rm heuristic_hugle web01 competent_gates elastic_ramanujan relaxed_sammet
clear
docker images
docker rmi a54ee9c44b3b 6130c26b5558 057d51c0049c 825d55fb6340 12766a6745ee feb5d9fea6a5
-----------------------------------------------------------------------------------------------
#########################################################################################
27/09/2023 : 09:34 am  Chevening house 
########################################################################################
-------------------------------------------------------------------------------------------
I learn python today : I followed a course where udemy 
aiofiles==0.8.0
anyio==3.6.1
asgiref==3.5.2
attrs==21.4.0
bdflib==2.0.0
beautifulsoup4==4.12.2
blinker==1.6.2
cached-property==1.5.2
------------------------------------------------------------------------------
############################################################################
28/09/2023 05:00 am  Home 
###########################################################################
----------------------------------------------------------------------------
--Login mysql as user 
$ sudo mysql -u root
-- List all databases on the MySQL server
SHOW DATABASES;

-- Delete a database
DROP DATABASE your_database_name;

-- Deleteing a user in mysql
DROP USER 'your_username'@'localhost';

-- Alter a password in mysql
ALTER USER 'your_username'@'localhost' IDENTIFIED BY 'new_password';

FLUSH PRIVILEGES;

-- Select a specific database (e.g., 'your_database_name')
USE your_database_name;

-- List tables in the selected database
SHOW TABLES;

-- Create a database , create user and grant previlige  in mysql
CREATE DATABASE your_database_name;
CREATE DATABASE wordpress;
CREATE USER 'your_username'@'localhost' IDENTIFIED BY 'your_password';
CREATE USER wordpress@localhost IDENTIFIED BY '<your-password>';
GRANT ALL PRIVILEGES ON your_database_name.* TO 'your_username'@'localhost';
GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,ALTER
    -> ON wordpress.*
    -> TO wordpress@localhost;
----------------------------------------------------------------------------------------------------
##########################################################################
28/09/2023 : 08: 56 am  cheving house office lab 2nd floor 
##########################################################################
------------------------------------------------------------------------
-- I am looking into npm on w3school .
-- Here is the link --
https://www.w3schools.com/whatis/whatis_npm.asp
-----------------------------------------------------------------------
--I am also looking into a html css bootstrap website theme . I can download , git , or npm to get and start working these theme 
https://startbootstrap.com/theme/personal
--Here is the github link for this theme 
https://github.com/StartBootstrap/startbootstrap-freelancer
-----------------------------------------------------------------------------------
###################################################################################################
29/09/2023 13:57 pm home
##################################################################################################
Cheking status of port 80
firewall-cmd --list-ports
firewall-cmd --remove-port=80/tcp --permanent
firewall-cmd --add-port=80/tcp --permanet
firewall-cmd --reload
----------------------------------------------------
sudo mysql -u root  -p
mysql -u wordpress -p
USE wordpress;
SOURCE /var/www/html/wordpress.sql;
SHOW TABLES;
SELECT * FROM wp_users;
---------------------------------------------
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
There has been a critical error on this website.

Learn more about troubleshooting WordPress.
????????????????????????????????????????//
--------------------------------------------
cat /var/log/httpd/error_log
Check DirectoryIndex Directive:

Open your Apache configuration file (typically located in /etc/httpd/conf/httpd.conf or a similar path) using a text editor with administrative privileges. You can use a command like this:
bash
Copy code
sudo nano /etc/httpd/conf/httpd.conf
Look for the DirectoryIndex directive. It should include index.php in the list of default index files. It should look something like this:
Copy code
DirectoryIndex index.html index.php
--------------------------------------------------------------------------------------------------------------------
#######################################################################################################
30/09/2023 04:25
#########################################################################################################
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
There was an issue verifying SSH on your server. We recommend stopping and restarting the server.
?????????????????????????????????????????????????????????????????????????????????
#Check SSH service status 
systemctl status ssh 
#if its not running 
sudo systemctl start ssh
#Enable to SSH service on boot
sudo sytemctl enable ssh 
#Check SSh configuration
/etc/ssh/sshd_config
sudo nano /etc/ssh/sshd_config
port: make sure its set to correct port (Default is 22)
PermitRoot Login : set to no to prevent root login via SSH
PasswordAuthentication : yes for allo , no for key based authentication 
#restart ssh service
sudo systemctl estart ssh
#Check frewaal rules
sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT
sudo service iptables save
#Check firewalld
sudo firewall-cmd --zone=public --add-port=22/tcp --permanent
sudo firewall-cmd --reload
#Check SSH Keys and Authentication:
/.ssh/authorized_keys
#Review logs 
/var/log/auth.log or /var/log/secure

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Sep 30 03:43:45 0e7cd22c7f1c.mylabserver.com sshd[1627]: userauth_pubkey: key type ssh-rsa not in PubkeyAcceptedAlgorit>
Sep 30 03:43:46 0e7cd22c7f1c.mylabserver.com sshd[1627]: Connection closed by authenticating user cloud_user 52.86.116.>
??????????????????????????????????????????????????????????????????????????????????????????????????????
# ~/.ssh/authorized_keys file within the user's home directory. These files should be accessible only by the user:
chmod 700 ~/.ssh
chmod 600 ~/.ssh/authorized_keys

#Ownership and Permissions: The second log entry indicates an issue with ownership and permissions for the /home/cloud_user directory. Ensure that the directory /home/cloud_user and its contents are owned by the user cloud_user. You can use the following commands to set the correct ownership:
sudo chown -R cloud_user:cloud_user /home/cloud_user
cat /etc/logrotate.d/<config-file-name>
if [ -d /etc/logrotate.d/httpd-prerotate ]; then: This line checks if the directory /etc/logrotate.d/httpd-prerotate exists. If it does, it indicates that there are additional configuration files or scripts that should be run before log rotation.

run-parts /etc/logrotate.d/httpd-prerotate: If the directory /etc/logrotate.d/httpd-prerotate exists, this line runs all executable files in that directory. These scripts are typically used to perform custom actions or preparations before log files are rotated.

endscript: This marks the end of the prerotate section of the logrotate configuration.
postrotate: This section contains actions to be taken after log rotation.

-----------------------------------------------------------------------------
Networking command
----------------------------------------------
ifconfig 
ip add show
ping 192.168.40.12
vi /etc/hosts
tracert www.google.com
netstat -antp
ps -ef | grep apache2
netstat -antp |grep 856
ps -ef |grep 336
ss -tunlp
nmap localhost
nmap db01
dig www.google.com
nslookup www.google.com
route -n
route
arp
mtr www.google.com
telnet 172.31.111.100
host www.google.com
----------------------------------
vagrant 
----------------------------------
Vagrant instll winodws: Download the link below
https://developer.hashicorp.com/vagrant/downloads
#check vagrant grlobal status
vagrant global-status
vagrant global-status --prune
vagrant destroy 1a2b3c4d -->ubuntu
vagrant destroy ba28021 -->container
vagrant init centos/7
vagrant up
vagrant destroy --force
---------------------------------------------------------
SSH configuration
sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config_backup
Port 22
PermitRootLogin no
PasswordAuthentication no
AllowUsers username1 username2
# OR
AllowGroups sshgroup
Protocol 2
PermitEmptyPasswords no
X11Forwarding no
UseDNS no
LoginGraceTime 30s
ClientAliveInterval 300
ClientAliveCountMax 5
sudo systemctl restart ssh
-----------------------------------------------------------------
30/09/2023 15:24
Deploy centos with vagrant in vmware oracle virtualbox
Looking the content of the vagrant file : C:\Users\km443\vagrant-vms\centos (Edit with notepad +)

Vagrant.configure("2") do |config|
config.vm.box = "centos/7"
# Customize the amount of memory on the VM:
vb.memory = "600"
config.vm.network "public_network"
 #using a specific IP.
config.vm.network "private_network", ip: "192.168.33.10"
--------------------------------------------------------
Login to centos using vagrant ssh 
check the with ip a 
check ethernet port : ens5 which static ip assigned to 192.168.1.158
host command not found..???? bind-utils need to install to work the host command: sudo yum install bind-utils
Install httpd deamon on cetos : systemctl status httpd
systemctl enable httpd
systemctl start httpd

ss -tulpn |grep httpd
-------------------------------------------------------------
 listening on by checking its configuration files and running certain commands. Here are the steps to determine the port number:
sudo nano /etc/httpd/conf/httpd.conf
ss -tulpn | grep httpd
netstat -tuln | grep httpd
----------------------------------
Install wordpress in centos 
sudo yum install php php-mysqlnd php-fpm php-gd php-xml php-mbstring
sudo yum install mariadb-server
sudo systemctl start mariadb
sudo systemctl enable mariadb

Install Additional Packages: Install other packages that may be required:
sudo yum install unzip wget
Step 2: Configure MariaDB
sudo mysql_secure_installation
mysql -u root -p

CREATE DATABASE wordpress_db;
CREATE USER 'wordpress_user'@'localhost' IDENTIFIED BY 'your_password';
GRANT ALL PRIVILEGES ON wordpress_db.* TO 'wordpress_user'@'localhost';
FLUSH PRIVILEGES;
EXIT;
---------------------------------------------------------------------------------------------------------
Create a backup and delete old backup script
--------------------------------------------------------------------------------------------------------
#!/bin/bash

# Destination directory for the backup
backup_dir="/home/vagrant/"

# backup filename
backup_filename="website"

#source directory to backup up
source_dir="/srv/www/"

#Number of days to keep old backups

days_to_keep=5

#Find and delete older than the specified days

find "$backup_dir" -name "${backup_filename}*.tar.gz" -type f -mtime +$days_to_keep -exec rm {} \;

#Create a compressed archive of the source directory
tar zcvf "$backup_dir/$backup_filename -$(date +%Y-%m-%d\ %H:%M:%S)".tar.gz -C "$source_dir" .

#Print a message indicating the backup is complete

echo " Backup of $source_dir completed at $(date +%Y-%m-%d\ %H:%M:%S)"

--------------------------------------------------------------------------------------------





### October 2023 Goals and objectives : Complete the Devops Beginers to advance with project 2023 
### Objectives: 1. Mulit VM setup , provision website , configure wordpress , mariadb, mysql , and automate the process 
             2. Git 
             3. Docker 
             4. Networking 
             5. Ansible 
             6 . Python 
             7. Maven 
### Weekely Goals ( 02/10/2023- 08/10/2023)

### week 1 : Goal: 1. Vprofile project set up manual and Automated 
                   2. Networking 
                   3. Docker Install on Ubuntu : Microservice project 
### Objectives :   1. VM setup,  DB , cache and quee setup, App setup Nginx setup , Validate , Automation : code and execution 
                   2. Understanding Network & IP , protocols , and portsand networking commands
                   3. Vagrant files and docker compose 

###########################################################
1/10/2023 19:10
############################################################
#1. Install git 

sudo yum install git -y

------------------------------------------------------------------------------------
#2.Local Repository setup : set the name and email for Git to use when you commit:
git config --global user.email "mkxdevops@gmail.com"
git config --global user.name "mxkdevops"
----------------------------------------------------------------------------------
#3 Create a directory
mkdir website

#4.Initiliase directory with init 
git init
git status

#5. Create Readme.md file staging and local commit 
git add .  (Staging)
git commit -m "New files added" ( Local commit)
git push origin HEAD:main
##########################################################
2/10/2023  06:07 am 
##########################################################
git status
git add . ( stagging area updated)
git commit -m " rename the file track_progress_oct2023"
git branch -M practice
git push origin HEAD:main
git log
git show 4b9ed99f93b8edca4b0b4d462ffdd48da1b3499e
git commit --onelineq
q
git pull
git branch -c sprint1
git branch -a
git checkout sprint1
git push origin sprint1
git branch -c sprint2
git switch sprint 2
git switch main
git merge sprint1
git rm debug.log
vim .gitignore
git add .
git status
git commit -m "git ignore file added" 
git push origin main 
git switch sprint1
git push --all origin


#########################################
02/10/2013 20:15 pm
#########################################
-------------------------------------------
Project : Multi tier Web application Stack
-------------------------------------------
Setup on Laptop/Desktop
-------------------------------------------
Tools 
---------------------------------------------------------------
1. Hypervisor - Oracle VM virtualbox:----> choco install virtualbox
2. Automation - Vagrant :----------------> choco install vagrant
3. Vagrant image ceontos 7 :-------------> https://app.vagrantup.com/centos/boxes/7
4.  Editor vscode :----------------------> choco install vscode


Architecture of project services
--------------------------------
NGINX
TOMCAT
RABBITMQ
MEMCACHED
MYSQL
----------------------------------
Flow of execution
-----------------------------------
1. Set up tools mention in prerequisite video
2. Clone source code
3. Cd into the vagrant dir
4. Bring up VMS 
5. Validate
6. Setup All services
    a. MYSQL
    b. Memcached
    c. RabbitMQ
    d. Tomcat
    e. Nginx


#########################################################################
03/10/2023 05.23 am
########################################################################

VProfile project setup 
I have downloaded and following the udemy and git link to complete the project 
......................................................................................
https://www.udemy.com/course/decodingdevops/learn/lecture/26460984?start=180#overview
https://github.com/hkhcoder/vprofile-project/tree/main
https://github.com/hkhcoder/vprofile-project/blob/main/vagrant/Manual_provisioning_WinMacIntel/VprofileProjectSetupWindowsAndMacIntel.pdf

-------------------------------
VM setup
-------------------------------
1. Clone the source code from git: https://github.com/hkhcoder/vprofile-project
2. Cd into :C:\Users\km443\vagrant-vms\hkhcoder\vprofile-project\vagrant\Manual_provisioning_WinMacIntel
3. execute vagrant up command
4. Chceck vagrant global-status --prune
5. Check vagrant status
6.vagrant halt
7.vagrant destroy 

----------------------------------------------------------------
Vagrant sManual provision
----------------------------------------------------------------
Go to vagrant directory : C:\Users\km443\vagrant-vms\hkhcoder\vprofile-project\vagrant\Manual_provisioning_WinMacIntel
Check the Vagrantfile 
I included only DB VM please check full vagrant file : original file was centos9 stream . it didnt run . therefore i changed it to ubuntu/jammy64
Vagrant.configure("2") do |config|
  config.hostmanager.enabled = true 
  config.hostmanager.manage_host = true
  
### DB vm  ####
  config.vm.define "db01" do |db01|
    db01.vm.box = "ubuntu/jammy64"
    db01.vm.hostname = "db01"
    db01.vm.network "private_network", ip: "192.168.56.15"
    db01.vm.provider "virtualbox" do |vb|
     vb.memory = "1000"
   end

  end
Edit and change to 
vagrant up 

---------------------------------------------------------------------------
1.MYSQL setup
-------------------------------------------------------------------------
Login to the db vm
$vagrant ssh db01


##############################################
4/10/2023 05:43 
#############################################
Install Chocolatey for Individual Use:
https://chocolatey.org/install
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]:
:SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
------------------------------------------------------------------------------------------------
4/10/2023/17:00
------------------------------------
5. Nginx Setup 
------------------------------------
------------------------------------
### Login to NGINX VM

$vagrant ssh web01
$sudo -i
.........................................
Verify Host entry , if entries missing update it it IP and hostnames
# cat /etc/hosts

Update OS with latest patches
# apt update 
# apt upgrade
-----------------------------------------------
Install nginx
# apt install nginx -y

Create Nginx conf file
#vi /etc/nginx/sites-available/vproapp

Update with below content 
#############
upstream vproapp {
    server app01:8080;
}

server {
    listen 80;  # Corrected "Listen" to "listen" with a lowercase "l"
    
    location / {
        proxy_pass http://vproapp;
    }
}
##############
Remove default nginx conf
#rm -rf /etc/nginx/sites-enabled/default
Create link to activate website
#ln -s /etc/nginx/sites-available/vproapp /etc/nginx/sites-enabled/vproapp

Nginx  Configuration 
# sudo nginx -t  # Test configuration
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful

Restart Nginx 
#sudo systemctl restart nginx  # Restart Nginx

Check Nginx Error Logs :
#sudo tail -f /var/log/nginx/error.log

#############################################
05/10/2023  20.24 pm
############################################
Step1: Downloaded the Vagrant file from vagrant/Manual_provsioning 
https://github.com/hkhcoder/vprofile-project/blob/main/vagrant/Manual_provisioning_WinMacIntel/Vagrantfile

Step 2 Copy the link centos/7 vagrant image 
https://app.vagrantup.com/centos/boxes/7
Step 3 : Update the vagrant file 
  config.vm.define "db01" do |db01|
    db01.vm.box = "centos/7"
# Go to C:\Users\km443\vagrant-vms\vprofile-project 
# vagrant up 
 Step 4 : Follow th elink below    
https://github.com/hkhcoder/vprofile-project/blob/main/vagrant/Manual_provisioning_WinMacIntel/VprofileProjectSetupWindowsAndMacIntel.pdf

Provisioning Services 
#cat /etc/hosts
## vagrant-hostmanager-start
1.MYSQL=>SQL databse          :192.168.56.15   db01
2.Memcache=>DB caching        :192.168.56.14   mc01
3.RbbitMQ=>Broker/queing agent:192.168.56.13   rmq01
4.Tomcat=>Application Service :192.168.56.12   app01
5.Nginx=>Webservice           :192.168.56.11   web01

#Update OS with latest patches
sudo yum update -y
#Set Repository
sudo yum install epel-release -y
#Repositroy configuration 
sudo vi /etc/yum.repos.d/MariaDB.repo

#Add the following content
[mariadb]
name = MariaDB
baseurl = http://yum.mariadb.org/10.3/centos7-amd64
gpgkey = https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck = 1

#Outdated Repository Cache
sudo yum clean all
sudo yum update -y

#Install mariadb-server
sudo yum install mariadb-server -y

#Starting&enabling mariadb-server
sudo systemctl start mariadb
sudo systemctl enable mariadb

#Run mysql secure installation script
mysql_secure_installation

#Note :Set db root password. i will using admin123 as password

#Login to mysql as root with password 
mysql -u root -padmin123

#Create db and admin users 
CREATE DATABASE accounts;
GRANT ALL PRIVILEGES ON ACCOUNTS.* TO 'ADMIN'@'%' IDENTIF
IED BY 'admin123';
FLUSH PRIVILEGES;

#Download Source code & Initiliase Database 
git clone -b main https://github.com/hkhcoder/vprofile-project.git
cd vprofile-project
mysql -u root -padmin123 accounts < src/main/resources/db_backup.sql
mysql -u root -padmin123 accounts
show tables;

#Restart mariadb-server
sudo systemctl restart mariadb

#########################################################
06/10/2023 05.13 am
#########################################################
1. Log in to mc01 
vagrant ssh mc01
2. MEMCACHE SETUP
#Install dnf on vm
sudo yum install dnf -y

#Install , start & enable memcached on port 11211
sudo dnf install epel-release -y
sudo dnf install memcached -y

#Start memecached service 
sudo systemctl start memcached

#Set memcached on boot 
sudo systemctl enable memcached

#To be able to login remotely memcached change the configuration 
sed -i 's/127.0.0.1/0.0.0.0/g' /etc/sysconfig/memcached
#sudo tee to append this value to the "OPTIONS" variable in the file.
echo 'OPTIONS="-l 0.0.0.0"' | sudo tee -a /etc/sysconfig/memcached
sudo sed -i '/OPTIONS="-l 0.0.0.0"/d' /etc/sysconfig/memcached
sudo sed -i '/OPTIONS="-1 0.0.0.0"/d' /etc/sysconfig/memcached

#Delete empty OPTIONS=" "
sudo sed -i '/OPTIONS=""/d' /etc/sysconfig/memcached
sudo cat /etc/sysconfig/memcached

sudo cat /etc/sysconfig/memcached
sudo vim /etc/sysconfig/memcached

#Restart memcached service
sudo systemctl restart memecached

#Satrting the firewall and allowing the port 11211 to access memecache
sudo systemctl start firewalld
sudo systemctl enable firewalld
sudo firewall-cmd --add-port=11211/tcp --permanent
sudo firewall-cmd --reload
sudo firewall-cmd --add-port=11111/udp
sudo firewall-cmd --runtime-to-permanent
sudo firewall-cmd --list-port
sudo memcached -p 11211 -U 11111 -u memcached -d 



3. RABBITMQ SETUP
#Login to RabbitMQ VM
vagrant ssh rmq01
#Verify Hosts entry , if entries missing update it with IP and hostnames
cat /etc/hosts
#Update OS with latest patches
sudo yum update -y
#Set EPEL Repository
sudo yum install epel-release -y

#Install dependencis 
sudo yum install wget -y 
cd /tmp/
sudo dnf -y install rabbitmq-server
sudo systemctl start rabbitmq-server
sudo systemctl enable rabbitmq-server

#Setup access to user test and make it it admin 
sudo sh -c 'echo "[{rabbit, [{loopback_users, []}]}]. " > /etc/rabbitmq/rabbitmq.config'
sudo rabbitmqctl add_user test test
sudo rabbitmqctl set_user_tags test administrator
sudo systemctl restart rabbitmq-server

#Satrting the firewall and allowing the port 5672 to access RABBITMQ
sudo systemctl start firewalld
sudo systemctl enable firewalld
sudo firewall-cmd --add-port=5672/tcp --permanent
sudo firewall-cmd --reload
sudo firewall-cmd --list-port
sudo systemctl restart rabbitmq-server

4. Tomcat Setup 
#Login to the tomcat vm
vagrant ssh app01
#Verify the host entry
cat /etc/hosts
#Update os at the latest patches
yum update -y
#Set Repository
sudo yum install epel-releae -y
#Install Dependencis
sudo dnf -y install java-11-openjdk java-11-openjdk-devel
sudo dnf install git maven wget -y
# Change dir to /tmp
cd /tmp/
#Download & Tomcat 
 wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.80/bin/apache-tomcat-9.0.80.tar.gz
tar xzvf apache-tomcat-9.0.80.tar.gz
sudo useradd --home-dir /usr/local/tomcat --shell /sbin/nologin tomcat
sudo cp -r /tmp/apache-tomcat-9.0.80/* /usr/local/tomcat/
sudo chown -R tomcat.tomcat /usr/local/tomcat
sudo vi /etc/systemd/system/tomcat.service

#Add the service configuration file 
[Unit]
Description=Apache Tomcat Web Application Container
After=syslog.target network.target

[Service]
Type=forking

Environment=CATALINA_PID=/usr/local/tomcat/temp/tomcat.pid
Environment=CATALINA_HOME=/usr/local/tomcat
Environment=CATALINA_BASE=/usr/local/tomcat
Environment='CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC'

ExecStart=/usr/local/tomcat/bin/startup.sh
ExecStop=/usr/local/tomcat/bin/shutdown.sh

User=tomcat
Group=tomcat
UMask=0007
RestartSec=10
Restart=always

[Install]
WantedBy=multi-user.target

sudo useradd -m -U -s /bin/false tomcat
sudo chown -R tomcat: /usr/local/tomcat
sudo systemctl daemon-reload
sudo systemctl enable tomcat
sudo systemctl start tomcat
sudo systemctl status tomcat

########################################################
07/01/2023   05:21
########################################################

Code Build and Deploy (App01)
----------------------------------------------------
sudo git clone -b main https://github.com/hkhcoder/vprofile-project.git
sudo vi src/main/resources/application.properties
sudo mvn install
ls target/
systemctl stop tomcat
ls /usr/local/tomcat/webapps
sudo rm -rf /usr/local/tomcat/webapps/ROOT
sudo cp target/vprofile-v2.war /usr/local/tomcat/webapps/ROOT.war
sudo systemctl start tomcat
sudo ls /usr/local/tomcat/webapps
--------------------------------------------------------------------

--------------------------------------------------------------------
NGINX setup
-----------------------------------------------
#Login to the NGINX vm
vagrant ssh web01
cat /etc/hosts
apt update && upgrade -y
apt install nginx -y

systemctl start nginx
systemctl enable nginx
systemctl status nginx

vi /etc/nginx/sites-available/vproapp
-----------------------------------------
upstream vproapp {
        server app01:8080;
}

server {
        listen 80;
        location / {
                proxy_pass http://vproapp;
        }
}
-----------------------------------------------------------
ls /etc/nginx/sites-available
default  vproapp
ls  -l /etc/nginx/sites-enabled/
rm -rf /etc/nginx/sites-enabled/default
ln -s /etc/nginx/sites-available/vproapp /etc/nginx/sites-enabled/vproapp
ls  -l /etc/nginx/sites-enabled/

#######################################################################
08/10/2023   05:10 am 
######################################################################
Databse error 
-------------------------------------------
Execute below mentioned commands:
$ vagrant destroy db01
$ vagrant up db01
$ vagrant ssh
$ sudo -i
# wget https://raw.githubusercontent.com/devopshydclub/vprofile-project/local-setup/vagrant/Automated_provisioning/mysql.sh
# /bin/bash mysql.sh
-------------------------------------------------------------------------------------------------------
http://192.168.56.11/welcome
username : admin_vp
password:  admin_vp
